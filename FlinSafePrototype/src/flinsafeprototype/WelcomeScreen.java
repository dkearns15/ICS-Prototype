/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flinsafeprototype;

import java.awt.Component;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Temp
 */
public class WelcomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeScreen
     */
    public WelcomeScreen() throws IOException {
        initComponents();
        mainRun();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PriorityTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        RecentlyTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ResolvedTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ProgressTextArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        All = new javax.swing.JButton();
        Progress = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        Resolved = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        HelpButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        FlinSupport = new javax.swing.JButton();
        NewInc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flinsafe");
        setMaximumSize(new java.awt.Dimension(760, 560));
        setMinimumSize(new java.awt.Dimension(760, 560));
        setPreferredSize(new java.awt.Dimension(760, 560));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Priority Incidents");

        PriorityTextArea.setEditable(false);
        PriorityTextArea.setBackground(new java.awt.Color(240, 240, 240));
        PriorityTextArea.setColumns(20);
        PriorityTextArea.setFont(PriorityTextArea.getFont());
        PriorityTextArea.setRows(5);
        PriorityTextArea.setText("placeholder priority\n");
        PriorityTextArea.setAutoscrolls(false);
        PriorityTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240), 0));
        jScrollPane1.setViewportView(PriorityTextArea);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Recently Added");

        RecentlyTextArea.setEditable(false);
        RecentlyTextArea.setBackground(new java.awt.Color(240, 240, 240));
        RecentlyTextArea.setColumns(20);
        RecentlyTextArea.setFont(RecentlyTextArea.getFont());
        RecentlyTextArea.setRows(5);
        RecentlyTextArea.setText("placeholder recent");
        RecentlyTextArea.setAutoscrolls(false);
        RecentlyTextArea.setBorder(null);
        jScrollPane2.setViewportView(RecentlyTextArea);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Recently Resolved");

        ResolvedTextArea.setEditable(false);
        ResolvedTextArea.setBackground(new java.awt.Color(240, 240, 240));
        ResolvedTextArea.setColumns(20);
        ResolvedTextArea.setFont(ResolvedTextArea.getFont());
        ResolvedTextArea.setRows(5);
        ResolvedTextArea.setText("placeholder resolved");
        ResolvedTextArea.setAutoscrolls(false);
        ResolvedTextArea.setBorder(null);
        jScrollPane3.setViewportView(ResolvedTextArea);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Events in Progress");

        ProgressTextArea.setEditable(false);
        ProgressTextArea.setBackground(new java.awt.Color(240, 240, 240));
        ProgressTextArea.setColumns(20);
        ProgressTextArea.setFont(ProgressTextArea.getFont());
        ProgressTextArea.setRows(5);
        ProgressTextArea.setText("placeholder progress");
        ProgressTextArea.setAutoscrolls(false);
        ProgressTextArea.setBorder(null);
        jScrollPane4.setViewportView(ProgressTextArea);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Jane Example");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Activities");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Organisational Role");

        jButton1.setText("Change User");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Settings");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        All.setText("Incident Queue");
        All.setMaximumSize(new java.awt.Dimension(115, 23));
        All.setMinimumSize(new java.awt.Dimension(115, 23));
        All.setPreferredSize(new java.awt.Dimension(115, 23));
        All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllActionPerformed(evt);
            }
        });

        Progress.setText("In Progress");
        Progress.setMaximumSize(new java.awt.Dimension(115, 23));
        Progress.setMinimumSize(new java.awt.Dimension(115, 23));
        Progress.setPreferredSize(new java.awt.Dimension(115, 23));
        Progress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProgressActionPerformed(evt);
            }
        });

        jButton5.setText("Modify Incidents");
        jButton5.setMaximumSize(new java.awt.Dimension(115, 23));
        jButton5.setMinimumSize(new java.awt.Dimension(115, 23));
        jButton5.setPreferredSize(new java.awt.Dimension(115, 23));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        Resolved.setText(" Resolved");
        Resolved.setMaximumSize(new java.awt.Dimension(115, 23));
        Resolved.setMinimumSize(new java.awt.Dimension(115, 23));
        Resolved.setPreferredSize(new java.awt.Dimension(115, 23));
        Resolved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResolvedActionPerformed(evt);
            }
        });

        jButton7.setText("Add New Incident");
        jButton7.setMaximumSize(new java.awt.Dimension(115, 23));
        jButton7.setMinimumSize(new java.awt.Dimension(115, 23));
        jButton7.setPreferredSize(new java.awt.Dimension(115, 23));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Print Reports");
        jButton8.setMaximumSize(new java.awt.Dimension(115, 23));
        jButton8.setMinimumSize(new java.awt.Dimension(115, 23));
        jButton8.setPreferredSize(new java.awt.Dimension(115, 23));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("View Reports");
        jButton9.setMaximumSize(new java.awt.Dimension(115, 23));
        jButton9.setMinimumSize(new java.awt.Dimension(115, 23));
        jButton9.setPreferredSize(new java.awt.Dimension(115, 23));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        HelpButton.setText("Help");
        HelpButton.setMaximumSize(new java.awt.Dimension(115, 23));
        HelpButton.setMinimumSize(new java.awt.Dimension(115, 23));
        HelpButton.setPreferredSize(new java.awt.Dimension(115, 23));
        HelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpButtonActionPerformed(evt);
            }
        });

        FlinSupport.setText("Flinsafe Support");
        FlinSupport.setMaximumSize(new java.awt.Dimension(115, 23));
        FlinSupport.setMinimumSize(new java.awt.Dimension(115, 23));
        FlinSupport.setPreferredSize(new java.awt.Dimension(115, 23));
        FlinSupport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlinSupportActionPerformed(evt);
            }
        });

        NewInc.setText("New Incidents");
        NewInc.setMaximumSize(new java.awt.Dimension(115, 23));
        NewInc.setMinimumSize(new java.awt.Dimension(115, 23));
        NewInc.setPreferredSize(new java.awt.Dimension(115, 23));
        NewInc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewIncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(0, 272, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addComponent(jLabel5)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(All, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(HelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(FlinSupport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Resolved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NewInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator5))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(All, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Resolved, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NewInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FlinSupport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(14, 14, 14))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProgressActionPerformed
        // TODO add your handling code here:
        
        try {
            new SecuritySummaryMain().setVisible(true);
            SecuritySummaryMain.tabbedMenu.setSelectedIndex(2);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ProgressActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");    }//GEN-LAST:event_jButton5ActionPerformed

    private void ResolvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResolvedActionPerformed
        // TODO add your handling code here:
        
        try {
            new SecuritySummaryMain().setVisible(true);
            SecuritySummaryMain.tabbedMenu.setSelectedIndex(3);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ResolvedActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");    }//GEN-LAST:event_jButton9ActionPerformed

    private void HelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpButtonActionPerformed
        // TODO add your handling code here:
        
        try {
            Desktop.getDesktop().browse(new URL("http://lmgtfy.com/?q=how+the+heck+does+flinsafe+work%3F").toURI());
        } catch (Exception e) {}
        
    }//GEN-LAST:event_HelpButtonActionPerformed

    private void FlinSupportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlinSupportActionPerformed
        // TODO add your handling code here:
        
         Component frame = null;
        JOptionPane.showMessageDialog(frame, "For Support with the Flinsafe System, please refer to the following:\nUrgent Support: 234 (08 8000 0234 external)\nGeneral Support: 534 (08 8000 0534 external)\nOut of Hours Support: 04132345678\nEmail Enquiries: flinsafe@flinders.edu.au\n","Support Contact",JOptionPane.PLAIN_MESSAGE);  
    }//GEN-LAST:event_FlinSupportActionPerformed

    private void AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllActionPerformed
        // TODO add your handling code here:
        
        try {
            new SecuritySummaryMain().setVisible(true);
            SecuritySummaryMain.tabbedMenu.setSelectedIndex(1);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AllActionPerformed

    private void NewIncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewIncActionPerformed
        // TODO add your handling code here:
        
        try {
            new SecuritySummaryMain().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NewIncActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Component frame = null;
        JOptionPane.showMessageDialog(frame, "This Function is not yet supported.");    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void mainRun() throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Parse CSV */
        
        
        
        
String priority = "";        
        
        
        try {
            //File file = new File(url.getPath());
            String file = new File(".").getAbsolutePath().substring(0,new File(".").getAbsolutePath().length() - 1) + "Priority.csv";
            String line;
            String[] incident = null;
            //DefaultTableModel tableModel = (DefaultTableModel) incidentQueueTable.getModel();

            //clear out table of anything that might be in it
            //int rowCount = tableModel.getRowCount();
            //for (int i = 0; i < rowCount; i++) {
            //    tableModel.removeRow(0);
            //}

//            ArrayList<String[]> list = new ArrayList();
            //Add all recentlyResolved reports to the recentlyResolvedTable
            int counter = 0;            
            
            String output = "";
            
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                br.readLine(); //Skip headers
                while ((line = br.readLine()) != null&&counter <5) {

                    //The following regex splits a csv file by commas, but not if they are in quotes
                    incident = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                    //String[] t = new String[]{incident[0], incident[2], incident[3], incident[1], incident[4], incident[5], incident[6]};
                    output = output + incident[2]+" at "+ incident[3]+" ("+incident[1]+")\n";
                    counter++;
                    //list.add(t);
                }
            }
            
            priority = output;
//            while(!list.isEmpty()){
//                tableModel.addRow(list.remove(list.size() - 1));
//            }

            //Just here in case we want it later
            //rowCount = tableModel.getRowCount();

        } catch (NullPointerException e) {
            //Create a popup saying, we can't find the file
            //Not implemented yet
        }
        
                
        
        String recently = "";        
        
        
        try {
            //File file = new File(url.getPath());
            String file = new File(".").getAbsolutePath().substring(0,new File(".").getAbsolutePath().length() - 1) + "NewIncidents.csv";
            String line;
            String[] incident = null;
            //DefaultTableModel tableModel = (DefaultTableModel) incidentQueueTable.getModel();

            //clear out table of anything that might be in it
            //int rowCount = tableModel.getRowCount();
            //for (int i = 0; i < rowCount; i++) {
            //    tableModel.removeRow(0);
            //}

//            ArrayList<String[]> list = new ArrayList();
            //Add all recentlyResolved reports to the recentlyResolvedTable
            
            String output = "";

            
            int counter = 0;            
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                br.readLine(); //Skip headers
                while ((line = br.readLine()) != null&&counter <5) {

                    //The following regex splits a csv file by commas, but not if they are in quotes
                    incident = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                    //String[] t = new String[]{incident[0], incident[2], incident[3], incident[1], incident[4], incident[5], incident[6]};
                    output = output + incident[2]+" at "+ incident[3]+" ("+incident[1]+")\n";
                    counter++;
                    //list.add(t);
                }
            }
            
            recently = output;

//            while(!list.isEmpty()){
//                tableModel.addRow(list.remove(list.size() - 1));
//            }

            //Just here in case we want it later
            //rowCount = tableModel.getRowCount();

        } catch (NullPointerException e) {
            //Create a popup saying, we can't find the file
            //Not implemented yet
        }
        
        
        
        String progress = "";
        
        try {
            //File file = new File(url.getPath());
            String file = new File(".").getAbsolutePath().substring(0,new File(".").getAbsolutePath().length() - 1) + "InProgress.csv";
            String line;
            String[] incident = null;
            //DefaultTableModel tableModel = (DefaultTableModel) incidentQueueTable.getModel();

            //clear out table of anything that might be in it
            //int rowCount = tableModel.getRowCount();
            //for (int i = 0; i < rowCount; i++) {
            //    tableModel.removeRow(0);
            //}

//            ArrayList<String[]> list = new ArrayList();
            //Add all recentlyResolved reports to the recentlyResolvedTable
            
            String output = "";

            
            int counter = 0;            
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                br.readLine(); //Skip headers
                while ((line = br.readLine()) != null&&counter <5) {

                    //The following regex splits a csv file by commas, but not if they are in quotes
                    incident = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                    //String[] t = new String[]{incident[0], incident[2], incident[3], incident[1], incident[4], incident[5], incident[6]};
                    output = output + incident[3]+" at "+ incident[6]+ " by "+ incident[4]+" ("+incident[1]+")\n";
                    counter++;
                    //list.add(t);
                }
            }
//            while(!list.isEmpty()){
//                tableModel.addRow(list.remove(list.size() - 1));
//            }
            progress = output;

            //Just here in case we want it later
            //rowCount = tableModel.getRowCount();

        } catch (NullPointerException e) {
            //Create a popup saying, we can't find the file
            //Not implemented yet
        }
        
        
        
        String resolved = "";
        
        try {
            //File file = new File(url.getPath());
            String file = new File(".").getAbsolutePath().substring(0,new File(".").getAbsolutePath().length() - 1) + "CompletedIncidents.csv";
            String line;
            String[] incident = null;
            //DefaultTableModel tableModel = (DefaultTableModel) incidentQueueTable.getModel();

            //clear out table of anything that might be in it
            //int rowCount = tableModel.getRowCount();
            //for (int i = 0; i < rowCount; i++) {
            //    tableModel.removeRow(0);
            //}

//            ArrayList<String[]> list = new ArrayList();
            //Add all recentlyResolved reports to the recentlyResolvedTable
                        String output = "";

            
            int counter = 0;            
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                br.readLine(); //Skip headers
                while ((line = br.readLine()) != null&&counter <5) {

                    //The following regex splits a csv file by commas, but not if they are in quotes
                    incident = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                    //String[] t = new String[]{incident[0], incident[2], incident[3], incident[1], incident[4], incident[5], incident[6]};
                    
                    output = output + incident[2]+" by "+ incident[3]+" ("+incident[1]+")\n";
                    counter++;
                    //list.add(t);
                }
            }
//            while(!list.isEmpty()){
//                tableModel.addRow(list.remove(list.size() - 1));
//            }
            resolved = output;

            //Just here in case we want it later
            //rowCount = tableModel.getRowCount();

        } catch (NullPointerException e) {
            //Create a popup saying, we can't find the file
            //Not implemented yet
        }
        
        
        
        
        
        //code removed
        //todo

        /* Create and display the form */
        
        
        PriorityTextArea.setText(priority.substring(0, priority.length() - 1));
        RecentlyTextArea.setText(recently.substring(0, recently.length() - 1));
        ProgressTextArea.setText(progress.substring(0, progress.length() - 1));
        ResolvedTextArea.setText(resolved.substring(0, resolved.length() - 1));


        
    }

    /**
     *
     * @param args
     */
    public static void main(String args[]){
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecuritySummaryNewIncidentResponse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecuritySummaryNewIncidentResponse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecuritySummaryNewIncidentResponse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecuritySummaryNewIncidentResponse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new WelcomeScreen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton All;
    private javax.swing.JButton FlinSupport;
    private javax.swing.JButton HelpButton;
    private javax.swing.JButton NewInc;
    private javax.swing.JTextArea PriorityTextArea;
    private javax.swing.JButton Progress;
    private javax.swing.JTextArea ProgressTextArea;
    private javax.swing.JTextArea RecentlyTextArea;
    private javax.swing.JButton Resolved;
    private javax.swing.JTextArea ResolvedTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    // End of variables declaration//GEN-END:variables
}
