/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flinsafeprototype;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.chart.BarChart;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYBarDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author dkear
 * 
 * Probably ignore this page. It is not used anymore and most of the stuff
 * in it is repeated elsewhere in better ways. It does have a good example of
 * how to set up a graph/chart though.
 */
public class ExecSummaryMain extends javax.swing.JFrame {

    /**
     * Creates new form ExecSummaryMain
     */
    public ExecSummaryMain() throws IOException {
        
        
        //All of the types of incidents that will be graphed
        String[] incidentTypes = new String[5];
        incidentTypes[0] = "Building Access";
        incidentTypes[1] = "Snake Sighting";
        incidentTypes[2] = "Car Walk";
        incidentTypes[3] = "Maintenance";
        incidentTypes[4] = "Fire Alarm";
        
        //The frequency of each type of incident, corresponded to the string[] above
        //Initialised to 0
        int[] incidentFreq = new int[5];
        incidentFreq[0] = 0;
        incidentFreq[1] = 0;
        incidentFreq[2] = 0;
        incidentFreq[3] = 0;
        incidentFreq[4] = 0;
        
        //Get the csv file containing all of the data
        URL url = getClass().getResource("CompletedIncidents.csv");
        //Should probably add a try catch here to make sure we have got the file.
        File file = new File(url.getPath());
        
        //Split by comma (it's a csv file)
        //See other files for better splitting
        String csvSplitBy = ",";
        String line;
        
        //While there are still lines, read in each line
        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            while ((line = br.readLine()) != null) {
                String[] incident = line.split(csvSplitBy);
                try {
                    for(int i = 0; i < incidentTypes.length; i++){
                        //increment frequency count of each incident every time it is found
                        //not very efficient but it works
                        if(incident[2].equals(incidentTypes[i])){
                            incidentFreq[i]++;
                            break;
                        }
                    }
                } catch (Exception e) {
                    System.out.println();
                }

            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        initComponents();
        initIncidentTypeFrequencyGraph(incidentTypes, incidentFreq);
        initReportFrequencyGraph(incidentFreq);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tab1Panel = new javax.swing.JPanel();
        graphPanel1 = new javax.swing.JPanel();
        graphPanel2 = new javax.swing.JPanel();
        graphPanel3 = new flinsafeprototype.MapWithPointsPanel(10, 150);
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Executive Summary Main");

        tab1Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        graphPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout graphPanel1Layout = new javax.swing.GroupLayout(graphPanel1);
        graphPanel1.setLayout(graphPanel1Layout);
        graphPanel1Layout.setHorizontalGroup(
            graphPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        graphPanel1Layout.setVerticalGroup(
            graphPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        graphPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout graphPanel2Layout = new javax.swing.GroupLayout(graphPanel2);
        graphPanel2.setLayout(graphPanel2Layout);
        graphPanel2Layout.setHorizontalGroup(
            graphPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        graphPanel2Layout.setVerticalGroup(
            graphPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout graphPanel3Layout = new javax.swing.GroupLayout(graphPanel3);
        graphPanel3.setLayout(graphPanel3Layout);
        graphPanel3Layout.setHorizontalGroup(
            graphPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        graphPanel3Layout.setVerticalGroup(
            graphPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tab1PanelLayout = new javax.swing.GroupLayout(tab1Panel);
        tab1Panel.setLayout(tab1PanelLayout);
        tab1PanelLayout.setHorizontalGroup(
            tab1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(graphPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(graphPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        tab1PanelLayout.setVerticalGroup(
            tab1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(412, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Incident Summary", tab1Panel);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Report Date", "Report Summary", "Report Writer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(100);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(1).setMinWidth(300);
            jTable1.getColumnModel().getColumn(2).setMinWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1215, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reports", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initIncidentTypeFrequencyGraph(String[] types, int[] freq){
        
        //Currently this if statement doesn't really do anything
        if(types.length != freq.length){
            graphPanel1.add(new JLabel("Types and frequency doesn't line up", JLabel.LEFT));
            graphPanel1.validate();
            return;
        }
        
        String series1 = "Incident Type";
        //Add each column to the dataset
        //Default category dataset is a general dataset used for categorical data
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(int i = 0; i < types.length; i++){
            dataset.addValue(freq[i], series1, types[i]);
        }
        
        //Create and add a bar chart to the display. Added to graphPanel1
        JFreeChart barChart = ChartFactory.createBarChart("Frequency of Each Incident Type", "Incident Type", "Frequency", dataset);
        ChartPanel panel = new ChartPanel(barChart);
        panel.setPreferredSize(new Dimension(graphPanel1.getWidth(), graphPanel1.getHeight()));
        graphPanel1.setLayout(new java.awt.BorderLayout());
        graphPanel1.add(panel, BorderLayout.CENTER);
        graphPanel1.validate();
    }
    
    private void initReportFrequencyGraph(int[] freq){
        String series1 = "Times";
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        JFreeChart lineChart = ChartFactory.createLineChart("Frequency of reports", "Date Occuring", "Frequency", dataset);
         ChartPanel panel = new ChartPanel(lineChart);
        panel.setPreferredSize(new Dimension(graphPanel2.getWidth(), graphPanel2.getHeight()));
        graphPanel2.setLayout(new java.awt.BorderLayout());
        graphPanel2.add(panel, BorderLayout.CENTER);
        graphPanel2.validate();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExecSummaryMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExecSummaryMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExecSummaryMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExecSummaryMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ExecSummaryMain().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ExecSummaryMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel graphPanel1;
    private javax.swing.JPanel graphPanel2;
    private flinsafeprototype.MapWithPointsPanel graphPanel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel tab1Panel;
    // End of variables declaration//GEN-END:variables
}
